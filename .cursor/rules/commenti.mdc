---
description: Standards for concise and clear comments in RAG Techniques project
autoAttached: true
globs: ["*.py"]
---

# 📝 Comments Standards - RAG Techniques Project

## 🎯 **Fundamental Principle**
**Concise comments, in Italian, immediately understandable for Italian students.**

## 📋 **Comments Rules**

### **1. Language**
- ✅ **Italian** for all explanations and descriptions
- ✅ **English** for specific technical terms:
  - `RAG` (Retrieval-Augmented Generation)
  - `embeddings`, `vector store`, `chunking`
  - `retriever`, `similarity search`
  - Library and model names

### **2. Length and Conciseness**
- ✅ **Docstrings:** 1-3 lines maximum, pipeline format with arrows `→`
- ✅ **Inline comments:** 1 line, essential but informative
- ❌ **NO:** Verbose or redundant descriptions

### **3. Pipeline Format**
```
# Pipeline RAG: PDF loading → chunking → text cleaning → Gemini embeddings → Chroma vector store → retriever
```

### **4. Correct Examples**

#### **Method Docstring:**
```python
def run(self, query):
    """
    RAG Retrieval: query embedding → Chroma similarity search → top-k results → context display.

    Args:
        query (str): User question for processing.

    Returns:
        None: Results displayed in console.
    """
```

#### **Inline Comment:**
```python
# Pipeline preprocessing: PDF → chunks → embeddings → vector store
start_time = time.time()
self.vector_store = encode_pdf(path, chunk_size=chunk_size, chunk_overlap=chunk_overlap)
```

#### **Commented Imports:**
```python
# Chroma vector store for efficient embeddings storage
from langchain_community.vectorstores import Chroma
```

### **5. Essential Content**

#### **What to Include:**
- ✅ Function/class purpose (1 sentence)
- ✅ Main workflow
- ✅ Critical parameters
- ✅ Important dependencies

#### **What to Avoid:**
- ❌ Obvious explanations
- ❌ Unnecessary implementation details
- ❌ Function name repetitions

### **6. Target Audience**
- 🎓 **Italian students** of AI/ML courses
- 📖 **Fast reading** during practical exercises
- 🔍 **Immediate understanding** without distractions

## 🚀 **Automatic Application**

This rule automatically activates for all `*.py` files in the RAG Techniques project.

**Goal:** Clear and professional educational code for Italian AI training! 🇮🇹🤖